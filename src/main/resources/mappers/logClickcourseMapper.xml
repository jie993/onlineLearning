<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.dao.logClickcourseMapper">
  <resultMap id="BaseResultMap" type="com.learn.model.logClickcourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="courseid" jdbcType="INTEGER" property="courseid" />
    <result column="clicktime" jdbcType="TIMESTAMP" property="clicktime" />
    <result column="value1" jdbcType="VARCHAR" property="value1" />
    <result column="value2" jdbcType="VARCHAR" property="value2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, courseid, clicktime, value1, value2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_clickcourse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_clickcourse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.model.logClickcourse">
    insert into log_clickcourse (id, userid, courseid, 
      clicktime, value1, value2
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, 
      #{clicktime,jdbcType=TIMESTAMP}, #{value1,jdbcType=VARCHAR}, #{value2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.learn.model.logClickcourse">
    insert into log_clickcourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="courseid != null">
        courseid,
      </if>
      <if test="clicktime != null">
        clicktime,
      </if>
      <if test="value1 != null">
        value1,
      </if>
      <if test="value2 != null">
        value2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="clicktime != null">
        #{clicktime,jdbcType=TIMESTAMP},
      </if>
      <if test="value1 != null">
        #{value1,jdbcType=VARCHAR},
      </if>
      <if test="value2 != null">
        #{value2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.model.logClickcourse">
    update log_clickcourse
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="clicktime != null">
        clicktime = #{clicktime,jdbcType=TIMESTAMP},
      </if>
      <if test="value1 != null">
        value1 = #{value1,jdbcType=VARCHAR},
      </if>
      <if test="value2 != null">
        value2 = #{value2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.model.logClickcourse">
    update log_clickcourse
    set userid = #{userid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      clicktime = #{clicktime,jdbcType=TIMESTAMP},
      value1 = #{value1,jdbcType=VARCHAR},
      value2 = #{value2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>