<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.dao.logSearchMapper">
  <resultMap id="BaseResultMap" type="com.learn.model.logSearch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="searchkey" jdbcType="VARCHAR" property="searchkey" />
    <result column="searchdate" jdbcType="TIMESTAMP" property="searchdate" />
    <result column="value1" jdbcType="VARCHAR" property="value1" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, searchkey, searchdate, value1
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_search
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_search
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.learn.model.logSearch">
    insert into log_search (id, userid, searchkey, 
      searchdate, value1)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{searchkey,jdbcType=VARCHAR}, 
      #{searchdate,jdbcType=TIMESTAMP}, #{value1,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.learn.model.logSearch">
    insert into log_search
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="searchkey != null">
        searchkey,
      </if>
      <if test="searchdate != null">
        searchdate,
      </if>
      <if test="value1 != null">
        value1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="searchkey != null">
        #{searchkey,jdbcType=VARCHAR},
      </if>
      <if test="searchdate != null">
        #{searchdate,jdbcType=TIMESTAMP},
      </if>
      <if test="value1 != null">
        #{value1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.model.logSearch">
    update log_search
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="searchkey != null">
        searchkey = #{searchkey,jdbcType=VARCHAR},
      </if>
      <if test="searchdate != null">
        searchdate = #{searchdate,jdbcType=TIMESTAMP},
      </if>
      <if test="value1 != null">
        value1 = #{value1,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.model.logSearch">
    update log_search
    set userid = #{userid,jdbcType=INTEGER},
      searchkey = #{searchkey,jdbcType=VARCHAR},
      searchdate = #{searchdate,jdbcType=TIMESTAMP},
      value1 = #{value1,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>